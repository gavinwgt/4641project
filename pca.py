# -*- coding: utf-8 -*-
"""PCA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZBbGsOw0YrljcOW8GRb6HE-Dw3vLxzcY
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler

#Load the CSV file
data = pd.read_csv('data.csv', encoding='latin1')

#Extract the numerical values from the DataFrame
X = data.iloc[:, 1:].values

#Feature names
feature_names = data.columns[1:]

#z-score normalization
scaler = StandardScaler()
X_normalized = scaler.fit_transform(X)

#Perform PCA
pca = PCA()
principal_components = pca.fit_transform(X_normalized)

#Explained variance ratios
explained_variances = pca.explained_variance_ratio_

#Principal components as a DataFrame with feature labels
principal_df = pd.DataFrame(
    data=principal_components,
    columns=[f'PC{i+1}' for i in range(principal_components.shape[1])]
)

# Add feature labels to the principal components DataFrame
principal_df.columns = feature_names

# Plot the explained variance ratios with feature labels
plt.bar(feature_names, explained_variances)
plt.xlabel('Features')
plt.ylabel('Explained Variance Ratio')
plt.title('Explained Variance Ratio of Features')
plt.xticks(rotation=90)
plt.show()

# Print the principal components DataFrame with feature labels
print(principal_df)

